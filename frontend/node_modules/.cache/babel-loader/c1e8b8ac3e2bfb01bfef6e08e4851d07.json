{"ast":null,"code":"var _jsxFileName = \"/Users/Sidney/Developer/ws-devsuperior/projeto-sds3/frontend/src/components/BarChart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { round } from \"utils/format\";\nimport { BASE_URL } from \"utils/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/success-by-seller`).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.sellerName);\n      const mySeries = data.map(x => round(100.0 * x.deals / x.visited, 1));\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \"% Success\",\n          data: mySeries\n        }]\n      });\n    });\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  };\n  const mockData = {\n    labels: {\n      categories: [\"Anakin\", \"Barry Allen\", \"Kal-El\", \"Logan\", \"Padmé\"]\n    },\n    series: [{\n      name: \"% Sucesso\",\n      data: [43.6, 67.1, 67.7, 45.6, 71.1]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      xaxis: chartData.labels\n    },\n    series: chartData.series,\n    type: \"bar\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BarChart, \"qPP5drRQ9nu8opjTBk53Ljk4Njk=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/Sidney/Developer/ws-devsuperior/projeto-sds3/frontend/src/components/BarChart/index.tsx"],"names":["axios","useEffect","useState","Chart","round","BASE_URL","BarChart","chartData","setChartData","labels","categories","series","name","data","get","then","response","myLabels","map","x","sellerName","mySeries","deals","visited","options","plotOptions","bar","horizontal","mockData","xaxis"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAeA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAY;AAClDO,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE;AADN,KAD0C;AAIlDC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE,EADR;AAEEC,MAAAA,IAAI,EAAE;AAFR,KADM;AAJ0C,GAAZ,CAA1C;AAYAZ,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAET,QAAS,0BAAtB,EACCU,IADD,CACOC,QAAD,IAAc;AAChB,YAAMH,IAAI,GAAGG,QAAQ,CAACH,IAAtB;AACA,YAAMI,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,UAAlB,CAAjB;AACA,YAAMC,QAAQ,GAAGR,IAAI,CAACK,GAAL,CAAUC,CAAD,IAAOf,KAAK,CAAC,QAAQe,CAAC,CAACG,KAAV,GAAkBH,CAAC,CAACI,OAArB,EAA8B,CAA9B,CAArB,CAAjB;AAEAf,MAAAA,YAAY,CAAC;AACXC,QAAAA,MAAM,EAAE;AACNC,UAAAA,UAAU,EAAEO;AADN,SADG;AAIXN,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE,WADR;AAEEC,UAAAA,IAAI,EAAEQ;AAFR,SADM;AAJG,OAAD,CAAZ;AAWD,KAjBH;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;AAsBA,QAAMG,OAAO,GAAG;AACdC,IAAAA,WAAW,EAAE;AACXC,MAAAA,GAAG,EAAE;AACHC,QAAAA,UAAU,EAAE;AADT;AADM;AADC,GAAhB;AAQA,QAAMC,QAAQ,GAAG;AACfnB,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,QAA1B,EAAoC,OAApC,EAA6C,OAA7C;AADN,KADO;AAIfC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE,WADR;AAEEC,MAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB;AAFR,KADM;AAJO,GAAjB;AAYA,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,EAAE,EAAE,GAAGW,OAAL;AAAcK,MAAAA,KAAK,EAAEtB,SAAS,CAACE;AAA/B,KADX;AAEE,IAAA,MAAM,EAAEF,SAAS,CAACI,MAFpB;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhED;;GAAML,Q;;KAAAA,Q;AAkEN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { SaleSuccess } from \"types/sale\";\nimport { round } from \"utils/format\";\nimport { BASE_URL } from \"utils/requests\";\n\ntype SeriesData = {\n    name: string;\n    data: number[];\n}\n\ntype ChartData = {\n    labels: {\n      categories: string[];\n    };\n    series: SeriesData[];\n}\n\n\nconst BarChart = () => {\n\n  const [chartData, setChartData] = useState<ChartData>({\n      labels: {\n        categories: [],\n      },\n      series: [\n        {\n          name: \"\",\n          data: [],\n        },\n      ]\n  });\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/success-by-seller`)\n    .then((response) => {\n        const data = response.data as SaleSuccess[];\n        const myLabels = data.map((x) => x.sellerName);\n        const mySeries = data.map((x) => round(100.0 * x.deals / x.visited, 1));\n\n        setChartData({\n          labels: {\n            categories: myLabels,\n          },\n          series: [\n            {\n              name: \"% Success\",\n              data: mySeries,\n            }\n          ]\n        });\n      });\n  }, []);\n\n\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      },\n    },\n  };\n\n  const mockData = {\n    labels: {\n      categories: [\"Anakin\", \"Barry Allen\", \"Kal-El\", \"Logan\", \"Padmé\"],\n    },\n    series: [\n      {\n        name: \"% Sucesso\",\n        data: [43.6, 67.1, 67.7, 45.6, 71.1],\n      },\n    ],\n  };\n\n  return (\n    <Chart\n      options={{ ...options, xaxis: chartData.labels }}\n      series={chartData.series}\n      type=\"bar\"\n      height=\"240\"\n    />\n  );\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}